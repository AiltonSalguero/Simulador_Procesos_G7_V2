/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;

import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import proyectosistemasoperativos.Pcb;
import proyectosistemasoperativos.ProyectoSistemasOperativos;

/**
 *
 * @author ailton
 */
public class SimuladorProcesos extends javax.swing.JFrame {

    /**
     * Creates new form SimuladorProcesos
     */
    ProyectoSistemasOperativos proyectoSistemasOperativos;
    public Thread hiloProcesos = new Thread(new HiloProcesos());
    public Thread hiloActualizarGUI = new Thread(new HiloActualizarGUI());
    boolean actualizoTablaPadresOriginales = false;
    boolean algoritmoPausado = false;

    public SimuladorProcesos() {
        initComponents();
    }

    void iniciarProcesos() {
        hiloProcesos.start();
        dormir();
        hiloActualizarGUI.start();
    }

    private void dormir() {
        try {
            Thread.sleep(500);
        } catch (InterruptedException ex) {
            Logger.getLogger(SimuladorProcesos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void pausarAlgoritmo() {
        hiloProcesos.suspend();
        algoritmoPausado = true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblProcesosListos = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblProcesosGenerales = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblProcesosBloqueados = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        tblProcesosTerminados = new javax.swing.JTable();
        jScrollPane8 = new javax.swing.JScrollPane();
        tblProcesosEjecutandose = new javax.swing.JTable();
        jButtonProcesosIO = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProcesosPadresOriginales = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1280, 720));
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Chandas", 1, 24)); // NOI18N
        jLabel1.setText("Simulador de Procesos");

        jLabel3.setText("PCB");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(1339, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(154, 154, 154))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel3)
                .addContainerGap(420, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("FCFS", jPanel1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1520, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 473, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("SJF Expropiativo", jPanel3);

        jLabel5.setText("Lista Procesos Generales");

        tblProcesosListos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Proceso", "Burst Time", "Tiempo Llegada", "Residuo", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tblProcesosListos);
        if (tblProcesosListos.getColumnModel().getColumnCount() > 0) {
            tblProcesosListos.getColumnModel().getColumn(0).setResizable(false);
            tblProcesosListos.getColumnModel().getColumn(1).setResizable(false);
            tblProcesosListos.getColumnModel().getColumn(2).setResizable(false);
            tblProcesosListos.getColumnModel().getColumn(3).setResizable(false);
            tblProcesosListos.getColumnModel().getColumn(4).setResizable(false);
        }

        tblProcesosGenerales.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Proceso", "Burst Time", "Tiempo Llegada", "Residuo", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tblProcesosGenerales);
        if (tblProcesosGenerales.getColumnModel().getColumnCount() > 0) {
            tblProcesosGenerales.getColumnModel().getColumn(0).setResizable(false);
            tblProcesosGenerales.getColumnModel().getColumn(1).setResizable(false);
            tblProcesosGenerales.getColumnModel().getColumn(2).setResizable(false);
            tblProcesosGenerales.getColumnModel().getColumn(3).setResizable(false);
            tblProcesosGenerales.getColumnModel().getColumn(4).setResizable(false);
        }

        tblProcesosBloqueados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Proceso", "Burst Time", "Tiempo Llegada", "Residuo", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(tblProcesosBloqueados);
        if (tblProcesosBloqueados.getColumnModel().getColumnCount() > 0) {
            tblProcesosBloqueados.getColumnModel().getColumn(0).setResizable(false);
            tblProcesosBloqueados.getColumnModel().getColumn(1).setResizable(false);
            tblProcesosBloqueados.getColumnModel().getColumn(2).setResizable(false);
            tblProcesosBloqueados.getColumnModel().getColumn(3).setResizable(false);
            tblProcesosBloqueados.getColumnModel().getColumn(4).setResizable(false);
        }

        tblProcesosTerminados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Proceso", "Burst Time", "Tiempo Llegada", "Residuo", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(tblProcesosTerminados);
        if (tblProcesosTerminados.getColumnModel().getColumnCount() > 0) {
            tblProcesosTerminados.getColumnModel().getColumn(0).setResizable(false);
            tblProcesosTerminados.getColumnModel().getColumn(1).setResizable(false);
            tblProcesosTerminados.getColumnModel().getColumn(2).setResizable(false);
            tblProcesosTerminados.getColumnModel().getColumn(3).setResizable(false);
            tblProcesosTerminados.getColumnModel().getColumn(4).setResizable(false);
        }

        tblProcesosEjecutandose.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Proceso", "Burst Time", "Tiempo Llegada", "Residuo", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane8.setViewportView(tblProcesosEjecutandose);
        if (tblProcesosEjecutandose.getColumnModel().getColumnCount() > 0) {
            tblProcesosEjecutandose.getColumnModel().getColumn(0).setResizable(false);
            tblProcesosEjecutandose.getColumnModel().getColumn(1).setResizable(false);
            tblProcesosEjecutandose.getColumnModel().getColumn(2).setResizable(false);
            tblProcesosEjecutandose.getColumnModel().getColumn(3).setResizable(false);
            tblProcesosEjecutandose.getColumnModel().getColumn(4).setResizable(false);
        }

        jButtonProcesosIO.setText("Procesos IO");
        jButtonProcesosIO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonProcesosIOActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(536, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(522, 522, 522))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(677, 677, 677)
                .addComponent(jButtonProcesosIO)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addComponent(jButtonProcesosIO)
                        .addGap(84, 84, 84))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(117, 117, 117))))
        );

        jTabbedPane1.addTab("SJF No Expropiativo", jPanel2);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1520, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 473, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("RR", jPanel4);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1520, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 473, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Prioridad", jPanel5);

        jButton1.setText("Inicio");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton5.setText("Pausa");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        tblProcesosPadresOriginales.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Proceso", "Burst-Time", "Tiempo Llegada", "Residuo", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblProcesosPadresOriginales);
        if (tblProcesosPadresOriginales.getColumnModel().getColumnCount() > 0) {
            tblProcesosPadresOriginales.getColumnModel().getColumn(0).setResizable(false);
            tblProcesosPadresOriginales.getColumnModel().getColumn(1).setResizable(false);
            tblProcesosPadresOriginales.getColumnModel().getColumn(3).setResizable(false);
            tblProcesosPadresOriginales.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel2.setText("Procesos Padre");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton5)
                    .addComponent(jButton1))
                .addGap(95, 95, 95)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(308, 308, 308))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 6, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        iniciarProcesos();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        if (algoritmoPausado) {
            renaurarAlgoritmo();
        } else {
            pausarAlgoritmo();
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButtonProcesosIOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonProcesosIOActionPerformed
        abrirVentanaProcesosIO();
    }//GEN-LAST:event_jButtonProcesosIOActionPerformed

    private void abrirVentanaProcesosIO() {
        ProcesosIO procesosIO = new ProcesosIO();
        procesosIO.setVisible(true);
        this.setVisible(false);
    }

    private void renaurarAlgoritmo() {
        hiloProcesos.resume();
        algoritmoPausado = false;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SimuladorProcesos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SimuladorProcesos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SimuladorProcesos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SimuladorProcesos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SimuladorProcesos().setVisible(true);
            }
        });
    }

    private void mostrarProcesosPadres() {
        DefaultTableModel procGeneralesModel = (DefaultTableModel) tblProcesosPadresOriginales.getModel();
        System.out.println("8888888 " + procGeneralesModel.getRowCount());
        ArrayList<Pcb> padresOriginal = proyectoSistemasOperativos.procesosPadresOriginal;

        for (Pcb proceso : padresOriginal) {
            Object[] proc = new Object[5];
            proc[0] = Integer.toString(proceso.getCodigo());
            proc[1] = Integer.toString(proceso.getBurstTime());
            proc[2] = Integer.toString(proceso.getTiempoLlegada());
            proc[3] = Integer.toString(proceso.getTiempoTermino());
            proc[4] = proceso.getEstado();
            procGeneralesModel.addRow(proc);
        }
        tblProcesosPadresOriginales.setModel(procGeneralesModel);
    }

    private void actualizarTablasProcesos(String tipo) {
        dormir();
        javax.swing.JTable tablaProcesos = new javax.swing.JTable();
        DefaultTableModel procesosModel = new DefaultTableModel();
        ArrayList<Pcb> procesos = new ArrayList<Pcb>();
        switch (tipo) {
            case "Listos": {
                tablaProcesos = tblProcesosListos;
                procesosModel = (DefaultTableModel) tblProcesosListos.getModel();
                procesos = ProyectoSistemasOperativos.procesosListos;
                break;
            }
            case "Generales": {
                tablaProcesos = tblProcesosGenerales;
                procesosModel = (DefaultTableModel) tblProcesosGenerales.getModel();
                procesos = ProyectoSistemasOperativos.procesosPadres;
                break;
            }
            case "Terminados": {
                tablaProcesos = tblProcesosTerminados;
                procesosModel = (DefaultTableModel) tblProcesosTerminados.getModel();
                procesos = ProyectoSistemasOperativos.procesosTerminados;
                break;
            }
            case "Bloqueados": {
                tablaProcesos = tblProcesosBloqueados;
                procesosModel = (DefaultTableModel) tblProcesosBloqueados.getModel();
                procesos = ProyectoSistemasOperativos.procesosBloqueados;
                break;
            }
            case "Ejecutandose": {
                tablaProcesos = tblProcesosEjecutandose;
                procesosModel = (DefaultTableModel) tblProcesosEjecutandose.getModel();
                procesos = ProyectoSistemasOperativos.procesoEjecutandose;
                break;
            }
        }

        try {
            for (Pcb proceso : procesos) {
                Object[] proc = new Object[5];
                proc[0] = proceso.getCodigo();
                proc[1] = proceso.getBurstTime();
                proc[2] = proceso.getTiempoLlegada();
                proc[3] = proceso.getTiempoTermino();
                proc[4] = proceso.getEstado();
                if (procesosModel.getRowCount() == 0) {
                    procesosModel.addRow(proc);
                }
                boolean diferentes = true;
                for (int i = 0; i < procesosModel.getRowCount(); i++) {
                    if ((procesosModel.getValueAt(i, 0) == proc[0])) {
                        diferentes = false;
                    }
                }
                if (diferentes) {
                    procesosModel.addRow(proc);
                }
            }
            tablaProcesos.setModel(procesosModel);
        } catch (Exception e) {
        }
    }

    private class HiloProcesos implements Runnable { //Objeto de tipo Hilo con extension ejecutable

        @Override
        public void run() {
            proyectoSistemasOperativos = new ProyectoSistemasOperativos();
            proyectoSistemasOperativos.iniciar();
        }
    }

    private class HiloActualizarGUI implements Runnable { //Objeto de tipo Hilo con extension ejecutable

        @Override
        public void run() {
            while (true) {
                if (!actualizoTablaPadresOriginales) {
                    mostrarProcesosPadres();
                    actualizoTablaPadresOriginales = true;
                }
                actualizarTablasProcesos("Listos");
                actualizarTablasProcesos("Generales");
                actualizarTablasProcesos("Bloqueados");
                actualizarTablasProcesos("Terminados");
                actualizarTablasProcesos("Ejecutandose");

            }
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButtonProcesosIO;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tblProcesosBloqueados;
    private javax.swing.JTable tblProcesosEjecutandose;
    private javax.swing.JTable tblProcesosGenerales;
    private javax.swing.JTable tblProcesosListos;
    private javax.swing.JTable tblProcesosPadresOriginales;
    private javax.swing.JTable tblProcesosTerminados;
    // End of variables declaration//GEN-END:variables
}
