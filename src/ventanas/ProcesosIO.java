/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;

import java.awt.Color;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.general.DatasetUtilities;
import proyectosistemasoperativos.ProyectoSistemasOperativos;

public class ProcesosIO extends javax.swing.JFrame {

    public static JFreeChart barChart_DiscoDuro;
    public static JFreeChart barChart_Impresora;
    public static JFreeChart barChart_Teclado;

    ProyectoSistemasOperativos proyectoSistemasOperativos;

    public Thread hiloActualizarBarras = new Thread(new HiloRefrescarBarras());

    /**
     * Creates new form ProcesosIO
     */
    public ProcesosIO() {
        initComponents();
        proyectoSistemasOperativos = new ProyectoSistemasOperativos();

        double[][] data = {{0}, {0}, {0}, {0}};
        CategoryDataset dataset = DatasetUtilities.createCategoryDataset("Estado", "", data);

        barChart_DiscoDuro = ChartFactory.createBarChart("", "Proceso", "Progreso", dataset, PlotOrientation.HORIZONTAL, true, true, true);
        barChart_Impresora = ChartFactory.createBarChart("", "Proceso", "Progreso", dataset, PlotOrientation.HORIZONTAL, true, true, true);
        barChart_Teclado = ChartFactory.createBarChart("", "Proceso", "Progreso", dataset, PlotOrientation.HORIZONTAL, true, true, true);
        
        CategoryPlot barChartPlot_DiscoDuro = barChart_DiscoDuro.getCategoryPlot();
        CategoryPlot barChartPlot_Impresora = barChart_Impresora.getCategoryPlot();
        CategoryPlot barChartPlot_Teclado = barChart_Teclado.getCategoryPlot();
        
        BarRenderer br_DiscoDuro = (BarRenderer) barChartPlot_DiscoDuro.getRenderer();
        br_DiscoDuro.setMaximumBarWidth(.30);
        BarRenderer br_Impresora = (BarRenderer) barChartPlot_Impresora.getRenderer();
        br_Impresora.setMaximumBarWidth(.30);
        BarRenderer br_Teclado = (BarRenderer) barChartPlot_Teclado.getRenderer();
        br_Teclado.setMaximumBarWidth(.30);
        barChartPlot_DiscoDuro.getRenderer().setSeriesPaint(0, new Color(0, 255, 0));
        barChartPlot_DiscoDuro.getRenderer().setSeriesPaint(1, new Color(0, 0, 255));
        barChartPlot_DiscoDuro.getRenderer().setSeriesPaint(2, new Color(0, 230, 255));
        
        barChartPlot_Impresora.getRenderer().setSeriesPaint(0, new Color(0, 255, 0));
        barChartPlot_Impresora.getRenderer().setSeriesPaint(1, new Color(0, 0, 255));
        barChartPlot_Impresora.getRenderer().setSeriesPaint(2, new Color(0, 230, 255));
        
        barChartPlot_Teclado.getRenderer().setSeriesPaint(0, new Color(0, 255, 0));
        barChartPlot_Teclado.getRenderer().setSeriesPaint(1, new Color(0, 0, 255));
        barChartPlot_Teclado.getRenderer().setSeriesPaint(2, new Color(0, 230, 255));
        
        ChartPanel bar_PanelT = new ChartPanel(barChart_Teclado);
        bar_PanelT.setSize(800, 400);
        JPanelTeclado.add(bar_PanelT);
        JPanelTeclado.setSize(800, 400);
        
        ChartPanel bar_PanelI = new ChartPanel(barChart_Impresora);
        bar_PanelI.setSize(800, 400);
        JPanelImpresora.add(bar_PanelI);
        JPanelImpresora.setSize(800, 400);
        
        ChartPanel bar_PanelD = new ChartPanel(barChart_DiscoDuro);
        bar_PanelD.setSize(800, 400);
        JPanelDiscoDuro.add(bar_PanelD);
        JPanelDiscoDuro.setSize(800, 400);
        hiloActualizarBarras.start();
    }

    private class HiloRefrescarBarras implements Runnable { //Objeto de tipo Hilo con extension ejecutable

        @Override
        public void run() {
            while (true) {
                dormir();
                refrescarTablaContadores("DiscoDuro");
                refrescarTablaContadores("Impresora");
                refrescarTablaContadores("Teclado");
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        JPanelDiscoDuro = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanelTeclado = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        JPanelImpresora = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        JPanelTeclado = new javax.swing.JPanel();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1280, 720));
        setResizable(false);

        JPanelDiscoDuro.setPreferredSize(new java.awt.Dimension(800, 400));

        javax.swing.GroupLayout JPanelDiscoDuroLayout = new javax.swing.GroupLayout(JPanelDiscoDuro);
        JPanelDiscoDuro.setLayout(JPanelDiscoDuroLayout);
        JPanelDiscoDuroLayout.setHorizontalGroup(
            JPanelDiscoDuroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
        );
        JPanelDiscoDuroLayout.setVerticalGroup(
            JPanelDiscoDuroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addComponent(JPanelDiscoDuro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(870, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(JPanelDiscoDuro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Disco Duro", jPanel1);

        jPanelTeclado.setPreferredSize(new java.awt.Dimension(800, 600));

        javax.swing.GroupLayout jPanelTecladoLayout = new javax.swing.GroupLayout(jPanelTeclado);
        jPanelTeclado.setLayout(jPanelTecladoLayout);
        jPanelTecladoLayout.setHorizontalGroup(
            jPanelTecladoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 469, Short.MAX_VALUE)
        );
        jPanelTecladoLayout.setVerticalGroup(
            jPanelTecladoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 358, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(257, 257, 257)
                .addComponent(jPanelTeclado, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(1055, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(82, Short.MAX_VALUE)
                .addComponent(jPanelTeclado, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        jTabbedPane1.addTab("Teclado", jPanel5);

        JPanelImpresora.setPreferredSize(new java.awt.Dimension(800, 400));

        javax.swing.GroupLayout JPanelImpresoraLayout = new javax.swing.GroupLayout(JPanelImpresora);
        JPanelImpresora.setLayout(JPanelImpresoraLayout);
        JPanelImpresoraLayout.setHorizontalGroup(
            JPanelImpresoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
        );
        JPanelImpresoraLayout.setVerticalGroup(
            JPanelImpresoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(706, Short.MAX_VALUE)
                .addComponent(JPanelImpresora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(275, 275, 275))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(46, Short.MAX_VALUE)
                .addComponent(JPanelImpresora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        jTabbedPane1.addTab("Impresora", jPanel3);

        jLabel1.setText("PROCESOS I/O");

        jButton1.setText("Volver");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        JPanelTeclado.setPreferredSize(new java.awt.Dimension(800, 400));

        javax.swing.GroupLayout JPanelTecladoLayout = new javax.swing.GroupLayout(JPanelTeclado);
        JPanelTeclado.setLayout(JPanelTecladoLayout);
        JPanelTecladoLayout.setHorizontalGroup(
            JPanelTecladoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
        );
        JPanelTecladoLayout.setVerticalGroup(
            JPanelTecladoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(1570, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(163, 163, 163))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(596, 596, 596)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(177, 177, 177)
                        .addComponent(JPanelTeclado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jTabbedPane1)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 191, Short.MAX_VALUE)
                .addComponent(JPanelTeclado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(jButton1)
                .addGap(25, 25, 25))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(110, 110, 110)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(110, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProcesosIO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProcesosIO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProcesosIO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProcesosIO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProcesosIO().setVisible(true);
            }
        });
    }
    void dormir(){
        try {
            hiloActualizarBarras.sleep(1000);
        } catch (InterruptedException ex) {
            Logger.getLogger(ProcesosIO.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void refrescarTablaContadores(String tipo) {
        int ejecutando = 0;
        int listos = 0;
        int terminados = 0;
        JFreeChart barChart = null;
        JPanel jPanelBar = null;

        switch (tipo) {
            case "Teclado": {
                listos = proyectoSistemasOperativos.ListaColasIO.get(0).get(1).size();
                ejecutando = proyectoSistemasOperativos.ListaColasIO.get(0).get(2).size();
                terminados = proyectoSistemasOperativos.ListaColasIO.get(0).get(3).size();
                barChart = barChart_Teclado;
                jPanelBar = JPanelTeclado;
            }
            case "DiscoDuro": {
                ejecutando = proyectoSistemasOperativos.ListaColasIO.get(1).get(0).size();
                listos = proyectoSistemasOperativos.ListaColasIO.get(1).get(1).size();
                terminados = proyectoSistemasOperativos.ListaColasIO.get(1).get(2).size();
                barChart = barChart_DiscoDuro;
                jPanelBar = JPanelDiscoDuro;
            }
            case "Impresora": {
                listos = proyectoSistemasOperativos.ListaColasIO.get(2).get(1).size();
                ejecutando = proyectoSistemasOperativos.ListaColasIO.get(2).get(2).size();
                terminados = proyectoSistemasOperativos.ListaColasIO.get(2).get(3).size();
                barChart = barChart_Impresora;
                jPanelBar = JPanelImpresora;
            }
        }

        double[][] data = {{ejecutando}, {listos}, {terminados}};

        Comparable comparable1 = (Comparable) ("Ejecutando");
        Comparable comparable2 = (Comparable) ("Listo");
        Comparable comparable3 = (Comparable) ("Terminado");
        Comparable[] estados = {comparable1, comparable2, comparable3};
        Comparable[] prog = {(Comparable) ("Progreso")};

        CategoryDataset dataset = DatasetUtilities.createCategoryDataset(estados, prog, data);

        CategoryPlot barChartPlot = barChart.getCategoryPlot();
        barChartPlot.setDataset(dataset);

        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel JPanelDiscoDuro;
    private javax.swing.JPanel JPanelImpresora;
    private javax.swing.JPanel JPanelTeclado;
    private javax.swing.JButton jButton1;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private static javax.swing.JPanel jPanelTeclado;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
